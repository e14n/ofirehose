// spin up ofirehose.com
//
// Copyright 2012-2014 E14N https://e14n.com/
// Copyright 2017 AJ Jordan <alex@strugee.net>
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

var path = require("path"),
    fs = require("fs"),
    _ = require("underscore"),
    yargs = require("yargs"),
    defaults = require("../lib/defaults"),
    makeApp = require("../lib/app"),
    config = yargs
             .usage("Usage: $0 [options]")
             .alias({c: "config", h: "help", v: "version"})
             .describe({port: "Port that the HTTP server will bind to",
                        server: "The address on which publish/subscribe will happen",
                        address: "Address that the HTTP server will bind to; defaults to `server`'s value",
                        driver: "Databank driver",
                        params: "Databank driver parameters",
                        key: "Path to a private key file, if you're using HTTPS",
                        cert: "Path to a certificate file, if you're using HTTPS"
                       })
             .defaults(defaults)
             .env("OFIREHOSE")
             // Hack to make sure that .config()'s callback gets run even if -c isn't specified
             .default("c", "/dev/null", "/etc/pump.io.json and ~/.pump.io.json")
             .config("c", "JSON configuration file path", function findConfig(filename) {
                 var files,
                     config = {},
                     i,
                     raw,
                     parsed;

                 if (filename !== "/dev/null") {
                     files = [filename];
                 } else {
                     files = ["/etc/ofirehose.json"];
                     if (process.env.HOME) {
                         files.push(path.join(process.env.HOME, ".ofirehose.json"));
                     }
                 }

                 // This is all sync
                 for (i = 0; i < files.length; i++) {
                     try {
                         raw = fs.readFileSync(files[i]);
                     } catch (err) {
                         continue;
                     }

                     try {
                         parsed = JSON.parse(raw);
                         _.extend(config, parsed);
                     } catch (err) {
                         console.error("Error parsing JSON file " + files[i] + ": " + err.message);
                         process.exit(1);
                     }
                 }

                 return config;
             })
             .help()
             .version()
             .argv;

var app = makeApp(config);

app.start();
